<?xml version="1.0"?>

<project name="portecle" basedir="." default="jar">

  <property name="version" value="1.4" />
  <property name="helpbaseurl.default" value="/doc" />

  <property file="build.properties" />

  <!--
  To build portecle.jar with no Class-Path MANIFEST.MF attribute,
  set jar.classpath to an empty value in build.properties or command line.
  -->
  <property name="jar.classpath" value="bcprov.jar" />

  <property name="helpbaseurl" value="${helpbaseurl.default}" />

  <property name="root" value="." />
  <property name="src" value="${root}/src" />
  <property name="build" value="${root}/build" />
  <property name="dist" value="${root}/dist" />
  <property name="lib" value="${root}/lib" />

  <property name="jar" value="portecle.jar" />
  <property name="doc" value="${root}/doc" />

  <property name="bcprov.jar" value="${lib}/bcprov.jar" />

  <property name="build.debug" value="true" />
  <property name="build.debuglevel" value="lines,source" />
  <property name="build.srcver" value="1.6" />
  <property name="build.targetver" value="1.6" />
  <property name="build.encoding" value="UTF-8" />

  <path id="build.classpath">
    <pathelement location="${bcprov.jar}" />
  </path>

  <target name="build">
    <mkdir dir="${build}/classes" />
    <javac
      srcdir="${src}/main"
      destdir="${build}/classes"
      source="${build.srcver}"
      target="${build.targetver}"
      debug="${build.debug}"
      debuglevel="${build.debuglevel}"
      encoding="${build.encoding}">
      <classpath refid="build.classpath" />
      <compilerarg compiler="javac1.5" value="-Xlint:all,-serial" />
      <compilerarg compiler="jikes" value="+P" />
      <!-- TODO: +Z2 sometime -->
      <compilerarg compiler="jikes" value="+Z" />
    </javac>
    <copy todir="${build}/classes">
      <fileset dir="${src}/main" includes="**/*.properties" />
      <filterset>
        <filter token="VERSION" value="${version}" />
        <filter token="HELPBASEURL" value="${helpbaseurl}" />
      </filterset>
    </copy>
    <!-- Clean up possibly previously copied docs -->
    <delete dir="${build}/classes/doc" />
    <copy todir="${build}/classes">
      <fileset dir="${src}/main" includes="**/*.gif,**/*.png" />
    </copy>
    <condition property="jar.bundle.docs">
      <equals arg1="${helpbaseurl}" arg2="${helpbaseurl.default}" />
    </condition>
    <antcall target="copy-docs-to-classes" />
  </target>

  <!-- Internal: copy docs for inclusion in jar. -->
  <target name="copy-docs-to-classes" if="jar.bundle.docs">
    <copy todir="${build}/classes">
      <fileset dir="${root}" includes="doc/**"
        excludes="doc/index.html doc/**/keytool.png doc/.htaccess doc/favicon.ico" />
    </copy>
  </target>

  <target name="jar" depends="build">
    <!-- Indexing breaks "java -jar" (Class-Path ignored). -->
    <jar jarfile="${build}/${jar}" index="false">
      <manifest>
        <attribute name="Main-Class" value="net.sf.portecle.FPortecle" />
        <attribute name="SplashScreen-Image" value="net/sf/portecle/images/splash.png" />
        <attribute name="Implementation-Title" value="Portecle" />
        <attribute name="Implementation-Version" value="${version}" />
        <attribute name="Implementation-Vendor" value="The Portecle Project" />
        <attribute name="Implementation-Vendor-Id" value="net.sf.portecle" />
        <attribute name="Implementation-URL" value="http://portecle.sourceforge.net/" />
      </manifest>
      <fileset dir="${build}/classes" includes="*/**" />
    </jar>
    <condition property="jar.classpath.set">
      <and>
        <isset property="jar.classpath" />
        <not><equals arg1="${jar.classpath}" arg2="" trim="true" /></not>
      </and>
    </condition>
    <antcall target="jar-classpath" />
  </target>

  <!-- Internal: updates jar's Class-Path. -->
  <target name="jar-classpath" if="jar.classpath.set">
    <jar jarfile="${build}/${jar}" update="true">
      <manifest>
        <attribute name="Class-Path" value="${jar.classpath}" />
      </manifest>
    </jar>
  </target>

  <target name="javadoc">
    <mkdir dir="${build}/api" />
    <javadoc
      destdir="${build}/api"
      source="${build.srcver}"
      classpathref="build.classpath"
      private="yes"
      encoding="${build.encoding}"
      charset="${build.encoding}">
      <packageset dir="${src}/main" defaultexcludes="yes">
        <include name="net/sf/portecle/**" />
      </packageset>
    </javadoc>
  </target>

  <target name="run" depends="jar" description="Runs Portecle">
    <copy file="lib/bcprov.jar" todir="build" />
    <!-- TODO: command line args -->
    <java fork="true" jar="build/${jar}">
      <sysproperty key="portecle.experimental" value="true" />
    </java>
  </target>

  <target name="bindist" depends="jar"
    description="Builds the Portecle binary distribution">
    <mkdir dir="${dist}" />
    <zip destfile="${dist}/portecle-${version}.zip">
      <zipfileset prefix="portecle-${version}"
        dir="${root}" includes="README.txt,LICENSE.txt,NEWS.txt" />
      <zipfileset prefix="portecle-${version}" file="${build}/${jar}" />
      <zipfileset prefix="portecle-${version}"
        dir="${src}/icons" includes="portecle.*" />
      <zipfileset prefix="portecle-${version}"
        dir="${src}/etc" includes="portecle.desktop" />
      <zipfileset file="${bcprov.jar}"
        fullpath="portecle-${version}/bcprov.jar" />
    </zip>
  </target>

  <target name="srcdist"
    description="Builds the Portecle source distribution">
    <mkdir dir="${dist}" />
    <zip destfile="${dist}/portecle-${version}-src.zip">
      <zipfileset dir="${root}" prefix="portecle-${version}-src">
        <include name="*.txt" />
        <include name="*.xml" />
        <include name="prj.el" />
        <include name=".classpath" />
        <include name=".project" />
        <include name=".settings/**" />
        <include name="doc/**" />
        <include name="lib" />
        <include name="src/**" />
      </zipfileset>
    </zip>
  </target>

  <target name="dist" depends="srcdist,bindist"
    description="Builds Portecle distributions" />

  <target name="all" depends="dist,javadoc"
    description="Builds everything" />

  <target name="release" depends="distclean,dist"
    description="Builds Portecle release from scratch" />

  <target name="antic">
    <exec executable="antic" taskname="antic">
      <arg value="-java" />
      <arg line="-tab 4" />
      <arg value="${src}/main" />
    </exec>
  </target>

  <target name="jlint" depends="build">
    <exec executable="jlint" taskname="jlint">
      <arg value="-source" /><arg value="${src}/main" />
      <arg value="+all" />
      <arg value="${build}/classes" />
    </exec>
  </target>

  <target name="check" depends="antic,jlint"
    description="Runs static checks" />

  <target name="clean">
    <delete dir="${build}/api" />
    <delete dir="${build}/classes" />
    <delete file="${build}/${jar}" />
    <delete file="${build}/bcprov.jar" />
  </target>

  <target name="distclean" depends="clean">
    <delete dir="${dist}" />
  </target>

</project>
